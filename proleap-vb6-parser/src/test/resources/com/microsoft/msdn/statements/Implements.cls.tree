(startRule 
	(module 
		(moduleBody 
			(moduleBodyElement 
				(moduleBlock 
					(block 
						(blockStmt 
							(implementsStmt Implements   
								(ambiguousIdentifier PersonalData)))))) \n 
			(moduleBodyElement 
				(propertyGetStmt 
					(visibility Private)   Property Get   
					(ambiguousIdentifier PersonalData_Address) 
					(argList ( ))   
					(asTypeClause As   
						(type 
							(baseType String))) \n 
					(block 
						(blockStmt 
							(letStmt 
								(implicitCallStmt_InStmt 
									(iCS_S_VariableOrProcedureCall 
										(ambiguousIdentifier PersonalData_Address)))   =   
								(valueStmt 
									(literal "CustomerAddress"))))) \n End Property)) \n \n 
			(moduleBodyElement 
				(propertyLetStmt 
					(visibility Private)   Property Let   
					(ambiguousIdentifier PersonalData_Address) 
					(argList ( 
						(arg ByVal   
							(ambiguousIdentifier RHS)   
							(asTypeClause As   
								(type 
									(baseType String)))) )) \n \n End Property)) \n \n 
			(moduleBodyElement 
				(propertyLetStmt 
					(visibility Private)   Property Let   
					(ambiguousIdentifier PersonalData_Name) 
					(argList ( 
						(arg ByVal   
							(ambiguousIdentifier RHS)   
							(asTypeClause As   
								(type 
									(baseType String)))) )) \n \n End Property)) \n \n 
			(moduleBodyElement 
				(propertyGetStmt 
					(visibility Private)   Property Get   
					(ambiguousIdentifier PersonalData_Name) 
					(argList ( ))   
					(asTypeClause As   
						(type 
							(baseType String))) \n 
					(block 
						(blockStmt 
							(letStmt 
								(implicitCallStmt_InStmt 
									(iCS_S_VariableOrProcedureCall 
										(ambiguousIdentifier PersonalData_Name)))   =   
								(valueStmt 
									(literal "CustomerName"))))) \n End Property)))) <EOF>)
(startRule 
	(module 
		(moduleBody 
			(moduleBodyElement 
				(subStmt Sub   
					(ambiguousIdentifier ExitStatementDemo) 
					(argList ( )) \n 
					(block 
						(blockStmt 
							(variableStmt Dim   
								(variableListStmt 
									(variableSubStmt 
										(ambiguousIdentifier I)) ,   
									(variableSubStmt 
										(ambiguousIdentifier MyNum))))) \n    
						(blockStmt 
							(doLoopStmt Do \n       
								(block 
									(blockStmt 
										(forNextStmt For   
											(iCS_S_VariableOrProcedureCall 
												(ambiguousIdentifier I))   =   
											(valueStmt 
												(literal 1))   To   
											(valueStmt 
												(literal 1000)) \n          
											(block 
												(blockStmt 
													(letStmt 
														(implicitCallStmt_InStmt 
															(iCS_S_VariableOrProcedureCall 
																(ambiguousIdentifier MyNum)))   =   
														(valueStmt 
															(implicitCallStmt_InStmt 
																(iCS_S_ProcedureOrArrayCall 
																	(ambiguousIdentifier Int) ( 
																	(argsCall 
																		(argCall 
																			(valueStmt 
																				(valueStmt 
																					(implicitCallStmt_InStmt 
																						(iCS_S_VariableOrProcedureCall 
																							(ambiguousIdentifier Rnd))))   *   
																				(valueStmt 
																					(literal 1000))))) )))))) \n          
												(blockStmt 
													(selectCaseStmt Select   Case   
														(valueStmt 
															(implicitCallStmt_InStmt 
																(iCS_S_VariableOrProcedureCall 
																	(ambiguousIdentifier MyNum)))) \n             
														(sC_Case Case   
															(sC_Cond 
																(sC_CondExpr 
																	(valueStmt 
																		(literal 7)))) :  
															(block 
																(blockStmt 
																	(exitStmt Exit For))) \n            ) 
														(sC_Case Case   
															(sC_Cond 
																(sC_CondExpr 
																	(valueStmt 
																		(literal 29)))) :  
															(block 
																(blockStmt 
																	(exitStmt Exit Do))) \n            ) 
														(sC_Case Case   
															(sC_Cond 
																(sC_CondExpr 
																	(valueStmt 
																		(literal 54)))) :  
															(block 
																(blockStmt 
																	(exitStmt Exit Sub))) \n         ) End Select))) \n       Next   
											(ambiguousIdentifier I)))) \n    Loop))) \n End Sub)))) <EOF>)
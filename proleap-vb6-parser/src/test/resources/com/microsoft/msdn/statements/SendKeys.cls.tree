(startRule 
	(module 
		(moduleBody 
			(moduleBodyElement 
				(moduleBlock 
					(block 
						(blockStmt 
							(variableStmt Dim   
								(variableListStmt 
									(variableSubStmt 
										(ambiguousIdentifier ReturnValue)) ,   
									(variableSubStmt 
										(ambiguousIdentifier I))))) \n 
						(blockStmt 
							(letStmt 
								(implicitCallStmt_InStmt 
									(iCS_S_VariableOrProcedureCall 
										(ambiguousIdentifier ReturnValue)))   =   
								(valueStmt 
									(implicitCallStmt_InStmt 
										(iCS_S_ProcedureOrArrayCall 
											(ambiguousIdentifier Shell) ( 
											(argsCall 
												(argCall 
													(valueStmt 
														(literal "CALC.EXE"))) ,   
												(argCall 
													(valueStmt 
														(literal 1)))) )))))) \n 
						(blockStmt 
							(appActivateStmt AppActivate   
								(valueStmt 
									(implicitCallStmt_InStmt 
										(iCS_S_VariableOrProcedureCall 
											(ambiguousIdentifier ReturnValue)))))) \n 
						(blockStmt 
							(forNextStmt For   
								(iCS_S_VariableOrProcedureCall 
									(ambiguousIdentifier I))   =   
								(valueStmt 
									(literal 1))   To   
								(valueStmt 
									(literal 100)) \n    
								(block 
									(blockStmt 
										(sendkeysStmt SendKeys   
											(valueStmt 
												(valueStmt 
													(implicitCallStmt_InStmt 
														(iCS_S_VariableOrProcedureCall 
															(ambiguousIdentifier I))))   &   
												(valueStmt 
													(literal "{+}"))) ,   
											(valueStmt 
												(literal True))))) \n Next   
								(ambiguousIdentifier I))) \n 
						(blockStmt 
							(sendkeysStmt SendKeys   
								(valueStmt 
									(literal "=")) ,   
								(valueStmt 
									(literal True)))) \n 
						(blockStmt 
							(sendkeysStmt SendKeys   
								(valueStmt 
									(literal "%{F4}")) ,   
								(valueStmt 
									(literal True))))))))) <EOF>)
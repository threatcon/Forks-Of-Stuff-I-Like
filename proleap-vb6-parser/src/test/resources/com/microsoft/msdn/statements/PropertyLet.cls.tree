(startRule 
	(module 
		(moduleBody 
			(moduleBodyElement 
				(moduleBlock 
					(block 
						(blockStmt 
							(variableStmt Dim   
								(variableListStmt 
									(variableSubStmt 
										(ambiguousIdentifier CurrentColor)   
										(asTypeClause As   
											(type 
												(baseType Integer))))))) \n 
						(blockStmt 
							(constStmt Const   
								(constSubStmt 
									(ambiguousIdentifier BLACK)   =   
									(valueStmt 
										(literal 0))) ,   
								(constSubStmt 
									(ambiguousIdentifier RED)   =   
									(valueStmt 
										(literal 1))) ,   
								(constSubStmt 
									(ambiguousIdentifier GREEN)   =   
									(valueStmt 
										(literal 2))) ,   
								(constSubStmt 
									(ambiguousIdentifier BLUE)   =   
									(valueStmt 
										(literal 3)))))))) \n \n \n \n \n 
			(moduleBodyElement 
				(propertyLetStmt Property Let   
					(ambiguousIdentifier PenColor) 
					(argList ( 
						(arg 
							(ambiguousIdentifier ColorName)   
							(asTypeClause As   
								(type 
									(baseType String)))) )) \n    
					(block 
						(blockStmt 
							(selectCaseStmt Select   Case   
								(valueStmt 
									(implicitCallStmt_InStmt 
										(iCS_S_VariableOrProcedureCall 
											(ambiguousIdentifier ColorName)))) \n       
								(sC_Case Case   
									(sC_Cond 
										(sC_CondExpr 
											(valueStmt 
												(literal "Red")))) \n          
									(block 
										(blockStmt 
											(letStmt 
												(implicitCallStmt_InStmt 
													(iCS_S_VariableOrProcedureCall 
														(ambiguousIdentifier CurrentColor)))   =   
												(valueStmt 
													(implicitCallStmt_InStmt 
														(iCS_S_VariableOrProcedureCall 
															(ambiguousIdentifier RED))))))) \n      ) 
								(sC_Case Case   
									(sC_Cond 
										(sC_CondExpr 
											(valueStmt 
												(literal "Green")))) \n          
									(block 
										(blockStmt 
											(letStmt 
												(implicitCallStmt_InStmt 
													(iCS_S_VariableOrProcedureCall 
														(ambiguousIdentifier CurrentColor)))   =   
												(valueStmt 
													(implicitCallStmt_InStmt 
														(iCS_S_VariableOrProcedureCall 
															(ambiguousIdentifier GREEN))))))) \n      ) 
								(sC_Case Case   
									(sC_Cond 
										(sC_CondExpr 
											(valueStmt 
												(literal "Blue")))) \n          
									(block 
										(blockStmt 
											(letStmt 
												(implicitCallStmt_InStmt 
													(iCS_S_VariableOrProcedureCall 
														(ambiguousIdentifier CurrentColor)))   =   
												(valueStmt 
													(implicitCallStmt_InStmt 
														(iCS_S_VariableOrProcedureCall 
															(ambiguousIdentifier BLUE))))))) \n      ) 
								(sC_Case Case   
									(sC_Cond Else) \n          
									(block 
										(blockStmt 
											(letStmt 
												(implicitCallStmt_InStmt 
													(iCS_S_VariableOrProcedureCall 
														(ambiguousIdentifier CurrentColor)))   =   
												(valueStmt 
													(implicitCallStmt_InStmt 
														(iCS_S_VariableOrProcedureCall 
															(ambiguousIdentifier BLACK))))))) \n   ) End Select))) \n End Property)) \n \n \n \n \n 
			(moduleBodyElement 
				(moduleBlock 
					(block 
						(blockStmt 
							(letStmt 
								(implicitCallStmt_InStmt 
									(iCS_S_VariableOrProcedureCall 
										(ambiguousIdentifier PenColor)))   =   
								(valueStmt 
									(literal "Red"))))))))) <EOF>)
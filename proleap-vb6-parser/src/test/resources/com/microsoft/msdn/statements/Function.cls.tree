(startRule 
	(module \r\n \r\n 
		(moduleBody 
			(moduleBodyElement 
				(functionStmt Function   
					(ambiguousIdentifier CalculateSquareRoot) 
					(argList ( 
						(arg 
							(ambiguousIdentifier NumberArg)   
							(asTypeClause As   
								(type 
									(baseType Double)))) ))   
					(asTypeClause As   
						(type 
							(baseType Double))) \r\n    
					(block 
						(blockStmt 
							(ifThenElseStmt 
								(ifBlockStmt If   
									(ifConditionStmt 
										(valueStmt 
											(valueStmt 
												(implicitCallStmt_InStmt 
													(iCS_S_VariableOrProcedureCall 
														(ambiguousIdentifier NumberArg))))   <   
											(valueStmt 
												(literal 0))))   Then \r\n       
									(block 
										(blockStmt 
											(exitStmt Exit Function))) \r\n   ) 
								(ifElseBlockStmt Else \r\n       
									(block 
										(blockStmt 
											(letStmt 
												(implicitCallStmt_InStmt 
													(iCS_S_VariableOrProcedureCall 
														(ambiguousIdentifier CalculateSquareRoot)))   =   
												(valueStmt 
													(implicitCallStmt_InStmt 
														(iCS_S_ProcedureOrArrayCall 
															(ambiguousIdentifier Sqr) ( 
															(argsCall 
																(argCall 
																	(valueStmt 
																		(implicitCallStmt_InStmt 
																			(iCS_S_VariableOrProcedureCall 
																				(ambiguousIdentifier NumberArg)))))) ))))))) \r\n   ) End If))) \r\n End Function)) \r\n \r\n 
			(moduleBodyElement 
				(functionStmt Function   
					(ambiguousIdentifier CalcSum) 
					(argList ( 
						(arg ByVal   
							(ambiguousIdentifier FirstArg)   
							(asTypeClause As   
								(type 
									(baseType Integer)))) ,   
						(arg ParamArray   
							(ambiguousIdentifier OtherArgs) ( )) )) \r\n 
					(block 
						(blockStmt 
							(variableStmt Dim   
								(variableListStmt 
									(variableSubStmt 
										(ambiguousIdentifier ReturnValue)))))  \r\n \r\n 
						(blockStmt 
							(letStmt 
								(implicitCallStmt_InStmt 
									(iCS_S_VariableOrProcedureCall 
										(ambiguousIdentifier ReturnValue)))   =   
								(valueStmt 
									(implicitCallStmt_InStmt 
										(iCS_S_ProcedureOrArrayCall 
											(ambiguousIdentifier CalcSum) ( 
											(argsCall 
												(argCall 
													(valueStmt 
														(literal 4))) ,   
												(argCall 
													(valueStmt 
														(literal 3)))   , 
												(argCall 
													(valueStmt 
														(literal 2)))   , 
												(argCall 
													(valueStmt 
														(literal 1)))) ))))))) \r\n \r\n \r\n \r\n End Function)))) <EOF>)